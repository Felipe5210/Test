// <auto-generated />
using System;
using LABMedicine.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabClothingCollection.Data.migrations
{
    [DbContext(typeof(labmedicineDbContext))]
    [Migration("20230625234847_MigrationInicial")]
    partial class MigrationInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LabClothingCollection.Domain.Entities.Colecao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("AnoDeLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeDaColecao")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Orcamento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idResponsavel")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("NomeDaColecao")
                        .IsUnique();

                    b.ToTable("Colecoes");
                });

            modelBuilder.Entity("LabClothingCollection.Domain.Entities.Modelo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("IdentificadorDaColecao")
                        .HasColumnType("int");

                    b.Property<string>("Layout")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeDoModelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("LabClothingCollection.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CpfOuCnpj")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDeUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CpfOuCnpj")
                        .IsUnique()
                        .HasFilter("[CpfOuCnpj] IS NOT NULL");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CpfOuCnpj = "141.659.360-81",
                            DataDeNascimento = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria@mail.com",
                            Genero = "Masculino",
                            Status = "Ativo",
                            Telefone = "9999-9999",
                            TipoDeUsuario = "Administrador",
                            nomeCompleto = "Koiru Teusda Vueca"
                        },
                        new
                        {
                            id = 2,
                            CpfOuCnpj = "123.456.789-00",
                            DataDeNascimento = new DateTime(1985, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fulano@mail.com",
                            Genero = "Masculino",
                            Status = "Ativo",
                            Telefone = "8888-8888",
                            TipoDeUsuario = "Colaborador",
                            nomeCompleto = "Fulano de Tal"
                        },
                        new
                        {
                            id = 3,
                            CpfOuCnpj = "987.654.321-00",
                            DataDeNascimento = new DateTime(1992, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ciclana@mail.com",
                            Genero = "Feminino",
                            Status = "Ativo",
                            Telefone = "7777-7777",
                            TipoDeUsuario = "Cliente",
                            nomeCompleto = "Ciclana Silva"
                        },
                        new
                        {
                            id = 4,
                            CpfOuCnpj = "567.890.123-00",
                            DataDeNascimento = new DateTime(1978, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "beltrano@mail.com",
                            Genero = "Masculino",
                            Status = "Inativo",
                            Telefone = "6666-6666",
                            TipoDeUsuario = "Administrador",
                            nomeCompleto = "Beltrano Pereira"
                        },
                        new
                        {
                            id = 5,
                            CpfOuCnpj = "321.654.987-00",
                            DataDeNascimento = new DateTime(1995, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ana@mail.com",
                            Genero = "Feminino",
                            Status = "Ativo",
                            Telefone = "5555-5555",
                            TipoDeUsuario = "Cliente",
                            nomeCompleto = "Ana Souza"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
